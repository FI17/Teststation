@model Teststation.Models.EvaluationViewModel
@{ 
    var reachedPoints = Model.GetReachedPoints();
    var allPoints = Model.Test.GetAllPoints();
    var percentage = Math.Round(((double)reachedPoints / (double)allPoints * 100));
    var progressWidth = percentage.ToString() + "%";
    var grade = Model.GetGrade();
}
<table>
    <tr>
        <td width="150">Erreichte Punkte:</td>
        <td width="150">@reachedPoints</td>
        <td rowspan="3">
            <h1>@grade</h1>
        </td>
    </tr>
    <tr>
        <td>Gesamtpunktzahl:</td>
        <td>@allPoints</td>
    </tr>
    <tr>
        <td>Ergebnis:</td>
        <td>@Model.GetResult()</td>
    </tr>
    <tr>
        <td colspan="3">
            <div class="progress" style="height: 25px;">
                <div class="progress-bar-success" role="progressbar" aria-valuenow="@percentage.ToString()"
                     aria-valuemin="0" aria-valuemax="100" style="width:@progressWidth">
                </div>
                @{
                    if (grade == Consts.badGrade)
                    {
                        var neededPercentage = (Consts.neededPercentage - percentage);
                        var neededPercentageWidth = neededPercentage + "%";
                        <div class="progress-bar-danger" role="progressbar" aria-valuenow="@neededPercentage.ToString()"
                             aria-valuemin="0" aria-valuemax="100" style="width:@neededPercentageWidth;opacity:0;">
                        </div>
                        <div class="progress-bar-danger" role="progressbar" aria-valuenow="@neededPercentage.ToString()"
                             aria-valuemin="0" aria-valuemax="100" style="width:4px;">
                        </div>
                    }
                }
            </div>
        </td>
    </tr>
</table>